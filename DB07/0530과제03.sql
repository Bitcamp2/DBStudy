--1) 과목번호, 과목이름, 교수번호, 교수이름을 담을 수 있는 변수들을 선언하고 
--   유기화학 과목의 과목번호, 과목이름, 교수번호, 교수이름을 출력하세요.
DECLARE
	COURSE_CNO COURSE.CNO%TYPE;
    COURSE_CNAME COURSE.CNAME%TYPE;
    PROFESSOR_PNO PROFESSOR.PNO%TYPE;
    PROFESSOR_PNAME PROFESSOR.PNAME%TYPE;
BEGIN
	SELECT C.CNO
		 , C.CNAME
		 , P.PNO
		 , P.PNAME
		INTO COURSE_CNO,
			 COURSE_CNAME,
			 PROFESSOR_PNO,
			 PROFESSOR_PNAME
		FROM COURSE C
		JOIN PROFESSOR P
		  ON C.PNO = P.PNO
		WHERE C.CNAME LIKE '유기화학';
	DBMS_OUTPUT.PUT_LINE(COURSE_CNO);
	DBMS_OUTPUT.PUT_LINE(COURSE_CNAME);
	DBMS_OUTPUT.PUT_LINE(PROFESSOR_PNO);
	DBMS_OUTPUT.PUT_LINE(PROFESSOR_PNAME);
END;


--2) 위 데이터들을 레코드로 선언하고 출력하세요.
DECLARE
	TYPE COURSE_REC IS RECORD(
		CNO COURSE.CNO%TYPE,
		CNAME COURSE.CNAME%TYPE,
		PNO COURSE.PNO%TYPE
	);
	TYPE PROFESSOR_REC IS RECORD(
		PNO PROFESSOR.PNO%TYPE,
		PNAME PROFESSOR.PNAME%TYPE
	);
	
	COURSEREC COURSE_REC;
	PROFESSORREC PROFESSOR_REC;
BEGIN
	SELECT C.CNO
		 , C.CNAME
		 , P.PNO
		 , P.PNAME
		INTO COURSEREC.CNO,
			 COURSEREC.CNAME,
			 PROFESSORREC.PNO,
			 PROFESSORREC.PNAME
		FROM COURSE C
		JOIN PROFESSOR P
		
		  ON C.PNO = P.PNO
		WHERE C.CNAME LIKE '유기화학';
	DBMS_OUTPUT.PUT_LINE(COURSEREC.CNO);
	DBMS_OUTPUT.PUT_LINE(COURSEREC.CNAME);
	DBMS_OUTPUT.PUT_LINE(PROFESSORREC.PNO);
	DBMS_OUTPUT.PUT_LINE(PROFESSORREC.PNAME);
END;


