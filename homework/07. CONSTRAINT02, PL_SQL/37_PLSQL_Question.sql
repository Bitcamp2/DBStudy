--1) 과목번호, 과목이름, 교수번호, 교수이름을 담을 수 있는 변수들을 선언하고 
--   유기화학 과목의 과목번호, 과목이름, 교수번호, 교수이름을 출력하세요.
DECLARE 
	COURSE_ROW COURSE%ROWTYPE;
	PROFESSOR_ROW PROFESSOR%ROWTYPE;
BEGIN	
	    SELECT C.CNO
	    	 , C.CNAME
	    	 , C.PNO
	    	 , P.PNAME
	    	INTO 
	    		COURSE_ROW.CNO
	    	  , COURSE_ROW.CNAME
	    	  , PROFESSOR_ROW.PNO
	    	  , PROFESSOR_ROW.PNAME
		FROM COURSE C
		JOIN PROFESSOR p
		  ON C.PNO = P.PNO
		WHERE C.CNAME = '유기화학';
	
	DBMS_OUTPUT.PUT_LINE(COURSE_ROW.CNO);
	DBMS_OUTPUT.PUT_LINE(COURSE_ROW.CNAME);
	DBMS_OUTPUT.PUT_LINE(PROFESSOR_ROW.PNO);
	DBMS_OUTPUT.PUT_LINE(PROFESSOR_ROW.PNAME);
END;



--2) 위 데이터들을 레코드로 선언하고 출력하세요.
DECLARE 
	TYPE COURSE_REC IS RECORD (
		CNO COURSE.CNO%TYPE,
		CNAME COURSE.CNAME%TYPE,
		PNO COURSE.PNO%TYPE
	);
	
	TYPE PROFESSOR_REC IS RECORD (
		PNO PROFESSOR.PNO%TYPE,
		PNAME PROFESSOR.PNAME%TYPE
	);

	COURSE_ROW COURSE_REC;
	PROFESSOR_ROW PROFESSOR_REC;

BEGIN	
	SELECT C.CNO
	     , C.CNAME
	     , C.PNO
	     , P.PNAME
	INTO 
		COURSE_ROW.CNO
	  , COURSE_ROW.CNAME
	  , PROFESSOR_ROW.PNO
	  , PROFESSOR_ROW.PNAME
	FROM COURSE C
	JOIN PROFESSOR P
	  ON C.PNO = P.PNO
	WHERE C.CNAME = '유기화학';
	
	
	DBMS_OUTPUT.PUT_LINE(COURSE_ROW.CNO);
	DBMS_OUTPUT.PUT_LINE(COURSE_ROW.CNAME);
	DBMS_OUTPUT.PUT_LINE(PROFESSOR_ROW.PNO);
	DBMS_OUTPUT.PUT_LINE(PROFESSOR_ROW.PNAME);
END;