--17.
--1) 각 학과별 학생 수를 검색하세요
SELECT MAJOR 
	 , COUNT(*)
	 FROM STUDENT
	 GROUP BY MAJOR ;

--2) 화학과와 생물학과 학생 4.5 환산 평점의 평균을 각각 검색하세요
SELECT MAJOR 
	 , AVG(AVR /4.0*4.5)
	 FROM STUDENT
	 WHERE MAJOR IN ('화학','생물')
	 GROUP BY MAJOR;

--3) 부임일이 10년 이상 된 직급별(정교수, 조교수, 부교수) 교수의 수를 검색하세요
SELECT ORDERS 
	 , COUNT(*)
	 FROM PROFESSOR
	 WHERE ADD_MONTHS(HIREDATE,120)<=SYSDATE
	 GROUP BY ORDERS;

--4) 과목명에 화학이 포함된 과목의 학점수 총합을 검색하세요 ???
SELECT CNAME 
	 , SUM(ST_NUM)
	 FROM COURSE
	 WHERE CNAME LIKE '%화학%'
	 GROUP BY CNAME;

--5) 학과별 기말고사 평균을 성적순(성적 내림차순)으로 검색하세요
SELECT S.MAJOR 
	 , AVG(SC."RESULT")
	 FROM STUDENT s 
	 JOIN SCORE SC
	   ON SC.SNO = S.SNO 
	 GROUP BY S.MAJOR 
	 ORDER BY AVG(SC."RESULT");

--6) 30번 부서의 업무별 연봉의 평균을 검색하세요(소수점 두자리까지 표시)
SELECT JOB
	 , ROUND(AVG(SAL),2)
	 FROM EMP
	 WHERE DNO=30
	 GROUP BY JOB 

--7) 물리학과 학생 중에 학년별로 성적이 가장 우수한 학생의 평점을 검색하세요(학과, 학년, 평점)
SELECT MAJOR
	 , SYEAR 
	 , MAX(AVR)
	 FROM STUDENT
	 WHERE MAJOR = '물리'
	 GROUP BY SYEAR, MAJOR
	 ORDER BY SYEAR;
	
--18.
--1) 화학과를 제외하고 학과별로 학생들의 평점 평균을 검색하세요
SELECT MAJOR 
	 , AVG(AVR)
	 FROM STUDENT
	 WHERE MAJOR != '화학'
	 GROUP BY MAJOR 

--2) 화학과를 제외한 각 학과별 평균 평점 중에 평점이 2.0 이상인 정보를 검색하세요
SELECT MAJOR 
	 , AVG(AVR)
	 FROM STUDENT
	 HAVING MAJOR != '화학'
	    AND AVG(AVR)>=2.0
	 GROUP BY MAJOR 

--3) 기말고사 평균이 60점 이상인 학생의 정보를 검색하세요
SELECT ST.SNO 
	 , ST.SNAME 
	 , ST.SEX 
	 , ST.SYEAR 
	 , AVG(SC."RESULT")
	 FROM SCORE SC
	 JOIN STUDENT ST
	   ON SC.SNO = ST.SNO 
	 GROUP BY ST.SNO , ST.SNAME, ST.SEX , ST.SYEAR 
	 HAVING AVG(SC."RESULT")>=60; 

--4) 강의 학점이 3학점 이상인 교수의 정보를 검색하세요
SELECT P.*
	 , C.ST_NUM 
	 FROM COURSE c 
	 JOIN PROFESSOR p 
	   ON P.PNO = C.PNO 
	 WHERE C.ST_NUM >=3;

--5) 기말고사 평균 성적이 핵 화학과목보다 우수한 과목의 과목명과 담당 교수명을 검색하세요
SELECT C.CNAME 
	 , P.PNAME 
	 , AVG("RESULT")
	 FROM SCORE SC
	 JOIN COURSE c 
	   ON SC.CNO = C.CNO 
	 JOIN PROFESSOR p 
	   ON P.PNO = C.PNO 
	 HAVING AVG("RESULT")>= (
	 							SELECT AVG(S.RESULT)
	 								 FROM SCORE s 
	 								 JOIN COURSE c2 
	 								   ON C2.CNO = S.CNO
	 								 WHERE C2.CNAME = '핵화학'
	 								 GROUP BY C2.CNAME
	 )
	 GROUP BY C.CNAME, P.PNAME
	 ORDER BY AVG("RESULT");

--6) 근무 중인 직원이 4명 이상인 부서를 검색하세요(부서번호, 부서명, 인원수)	
SELECT D.DNO
	 , D.DNAME
	 , COUNT(*)
	 FROM EMP E
	 JOIN DEPT d 
	   ON D.DNO = E.DNO 
	 HAVING COUNT(*)>=4
	 GROUP BY D.DNO, D.DNAME;

--7) 업무별 평균 연봉이 3000 이상인 업무를 검색하세요
SELECT JOB
	 , AVG(SAL)
	 FROM EMP
	 HAVING AVG(SAL)>=3000
	 GROUP BY JOB;

--8) 각 학과의 학년별 인원중 인원이 5명 이상인 학년을 검색하세요
SELECT MAJOR 
	 , SYEAR
	 , COUNT(*)
	 FROM STUDENT
	 HAVING COUNT(*)>=5
	 GROUP BY MAJOR, SYEAR
	 ORDER BY MAJOR, SYEAR;
--19.
--1) 각 학과별 학년별 학생 수를 ROLLUP함수로 검색하세요
SELECT MAJOR 
	 , SYEAR
	 , COUNT(*)
	 FROM STUDENT
	 GROUP BY ROLLUP(MAJOR, SYEAR)
	 ORDER BY MAJOR, SYEAR;
	 
--2) 화학과와 생물학과 학생 4.5 환산 평점의 평균을 각각 검색하는 데 화학과 생물이 열로 만들어지도록 하세요.(PIVOT 사용)
--화학과 생물 컬럼을 열로 만들기 전
SELECT MAJOR 
	 , AVG(AVR/4.0*4.5)
	 FROM STUDENT
	 WHERE MAJOR IN ('화학','생물')
	 GROUP BY MAJOR ;

SELECT *
	FROM (
			SELECT MAJOR
				 , AVR
				FROM STUDENT
	)
	PIVOT(
		AVG(AVR/4.0*4.5)
			FOR MAJOR IN(
				'화학','생물'
			)
	)

--3) 학과별 학생이름을 ,로 구분하여 성적순으로(내림차순) 조회하세요.(LISTAGG 사용)
SELECT MAJOR 
	 , LISTAGG(SNAME,', ') 
	 	WITHIN GROUP(ORDER BY AVR DESC)
	 FROM STUDENT
	 GROUP BY MAJOR 

--4) 부서별 업무별 연봉의 평균을 검색하세요(부서와 업무 컬럼의 그룹화 여부도 같이 검색, GROUPING 사용)
SELECT DNO 
	 , JOB 
	 , AVG(SAL)
	 , GROUPING(DNO)
	 , GROUPING(JOB)
	 , GROUPING_ID(DNO, JOB)
	 FROM EMP
	 GROUP BY DNO,JOB
	 ORDER BY DNO,JOB;
	--결과가 이게 맞낭ㅇㅅㅇ
	
--20.
--1) 각 과목의 과목번호, 과목명, 담당 교수의 교수번호, 교수명을 검색하라(NATURAL JOIN 사용)
SELECT C.CNO 
	 , C.CNAME 
	 , PNO 
	 , P.PNAME 
	 FROM COURSE c 
	 NATURAL JOIN PROFESSOR p  

--2) 화학과 학생의 기말고사 성적을 모두 검색하라(JOIN USING 사용)
SELECT ST.MAJOR 
	 , SC."RESULT" 
	 FROM STUDENT ST
	 JOIN SCORE SC 
	 USING (SNO)
	 WHERE ST.MAJOR = '화학'

--3) 화학 관련 과목을 강의하는 교수의 명단을 검색한다(NATURAL JOIN 사용)
SELECT PNO 
	 , P.PNAME
	 , P."SECTION" 
	 , P.ORDERS 
	 FROM PROFESSOR p 
	 NATURAL JOIN COURSE c 	 

--4) 화학과 1학년 학생의 기말고사 성적을 검색한다(NATURAL JOIN 사용)
SELECT S.MAJOR , S.SYEAR , SC."RESULT" 
	 FROM STUDENT s 
	 NATURAL JOIN SCORE SC
	 WHERE S.MAJOR = '화학'
	   AND S.SYEAR =1

--5) 일반화학 과목의 기말고사 점수를 검색한다(JOIN USING 사용)
SELECT C.CNAME , S."RESULT" 
	 FROM COURSE c 
	 JOIN SCORE s 
	 USING (CNO)
	 WHERE C.CNAME = '일반화학'

--6) 화학과 1학년 학생이 수강하는 과목을 검색한다(NATURAL JOIN 사용)
SELECT S.MAJOR , S.SYEAR , C.CNAME 
	 FROM STUDENT s 
	 NATURAL JOIN COURSE c 
	 WHERE S.MAJOR = '화학'
	   AND S.SYEAR = 1
	   
--21.
--1) 다중 컬럼 IN절을 이용해서 기말고사 성적이 80점 이상인 과목번호, 학생번호, 기말고사 성적을 모두 조회하세요.
--다중 IN절에 들어갈 구문
SELECT SC."RESULT" 
	 FROM SCORE SC
	 WHERE SC."RESULT" >=80
	 
SELECT SC.*
	 FROM SCORE SC
	 WHERE SC."RESULT" IN (
	 				SELECT SC."RESULT" 
						FROM SCORE SC
	 					WHERE SC."RESULT" >=80
	 )

--2) 다중 컬럼 IN절을 이용해서 화학과나 물리학과면서 학년이 1, 2, 3학년인 학생의 정보를 모두 조회하세요.
SELECT S.*
	 FROM STUDENT S
	 WHERE (S.MAJOR,S.SYEAR) IN (('화학',1),('화학',2),('화학',3),('물리',1),('물리',2),('물리',3))
	 ORDER BY S.MAJOR,S.SYEAR;

--3) 다중 컬럼 IN절을 사용해서 부서가 10, 20, 30이면서 보너스가 1000이상인 사원의 사원번호, 사원이름, 부서번호, 부서이름, 업무, 급여, 보너스를 
--   조회하세요.(서브쿼리 사용)
--서브쿼리 작성: 부서가 10, 20, 30이면서 보너스가 1000이상
SELECT DNO , COMM 
	 FROM EMP
	 WHERE DNO IN (10,20,30)
	   AND COMM>=1000
	 
SELECT E.ENO 
	 , E.ENAME 
	 , E.DNO 
	 , D.DNAME
	 , E.JOB 
	 , E.SAL 
	 , E.COMM 
	 FROM EMP E
	 JOIN DEPT d 
	   ON D.DNO = E.DNO 
	 WHERE (E.DNO, E.COMM) IN (
	 	SELECT DNO , COMM 
			 FROM EMP
	 		 WHERE DNO IN (10,20,30)
	   		   AND COMM>=1000
	 
	 )
--4) 다중 컬럼 IN절을 사용하여 기말고사 성적의 최고점이 100점인 과목의 과목번호, 과목이름, 학생번호, 학생이름, 기말고사 성적을 조회하세요.(서브쿼리 사용)
--서브쿼리 작성: 기말고사 성적의 최고점이 100점인 과목
SELECT CNO
	  ,MAX(RESULT)
	 FROM SCORE 
	 GROUP BY CNO
	 HAVING MAX(RESULT)=100;
	 
SELECT C.CNO 
	 , C.CNAME 
	 , ST.SNO
	 , ST.SNAME 
	 , SC."RESULT" 
	 FROM STUDENT ST
	 JOIN SCORE SC
	   ON ST.SNO = SC.SNO 
	 JOIN COURSE c 
	   ON C.CNO = SC.CNO 
	 WHERE (SC.CNO,SC."RESULT") IN (
	 SELECT CNO
	  ,MAX(RESULT)
	 FROM SCORE 
	 GROUP BY CNO
	 HAVING MAX(RESULT)=100
	 );
	 
	 
	 